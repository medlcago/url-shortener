// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user and generate access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth_delivery_http.request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-url-shortener_internal_auth_Token"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns authenticated user's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get current user info",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user data",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-url-shortener_internal_models_User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Refresh token. Requires valid refresh token in Authorization header.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh token",
                "responses": {
                    "200": {
                        "description": "Returns new access and refresh tokens",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-url-shortener_internal_auth_Token"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user account and return authentication tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth_delivery_http.request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-url-shortener_internal_auth_Token"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    }
                }
            }
        },
        "/links": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all shortened URLs for the authenticated user with pagination",
                "tags": [
                    "links"
                ],
                "summary": "Get all user's links",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's links with pagination info",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-array_url-shortener_internal_models_Link"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generates a short alias for the provided URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Create a short URL",
                "parameters": [
                    {
                        "description": "URL data for shortening",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_links_delivery_http.request"
                        }
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Создать ссылку без привязки к пользователю",
                        "name": "X-Anonymous",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "URL successfully shortened",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-url-shortener_internal_models_Link"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    }
                }
            }
        },
        "/links/{alias}": {
            "get": {
                "description": "Performs redirect from short URL to original",
                "tags": [
                    "links"
                ],
                "summary": "Redirect by short URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL identifier",
                        "name": "alias",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "308": {
                        "description": "Permanent redirect to original URL"
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/url-shortener_pkg_http.Response-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_auth_delivery_http.request": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "very_strong_password"
                }
            }
        },
        "internal_links_delivery_http.request": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "original_url": {
                    "type": "string",
                    "example": "https://github.com/"
                }
            }
        },
        "url-shortener_internal_auth.Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "url-shortener_internal_models.Link": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        },
        "url-shortener_internal_models.User": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_email_verified": {
                    "type": "boolean"
                },
                "login_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "url-shortener_pkg_http.MetaData": {
            "type": "object",
            "additionalProperties": {}
        },
        "url-shortener_pkg_http.Response-any": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/url-shortener_pkg_http.MetaData"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "url-shortener_pkg_http.Response-array_url-shortener_internal_models_Link": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/url-shortener_internal_models.Link"
                    }
                },
                "error": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/url-shortener_pkg_http.MetaData"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "url-shortener_pkg_http.Response-url-shortener_internal_auth_Token": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/url-shortener_internal_auth.Token"
                },
                "error": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/url-shortener_pkg_http.MetaData"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "url-shortener_pkg_http.Response-url-shortener_internal_models_Link": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/url-shortener_internal_models.Link"
                },
                "error": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/url-shortener_pkg_http.MetaData"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "url-shortener_pkg_http.Response-url-shortener_internal_models_User": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/url-shortener_internal_models.User"
                },
                "error": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/url-shortener_pkg_http.MetaData"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "URL Shortener API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
