volumes:
  postgres_data:
  redis_data:


services:
  web:
    container_name: api
    build:
      context: ./
      dockerfile: docker/Dockerfile
    depends_on:
      - postgresql
      - redis
    restart: always
    volumes:
      - ./:/app

  migrations:
    image: ghcr.io/kukymbr/goose-docker-cmd:latest
    env_file:
      - .env
    depends_on:
      - postgresql
    restart: on-failure
    volumes:
      - ./migrations:/migrations
    command: [ "up" ]

  redis:
    image: redis:latest
    container_name: api_redis
    restart: always
    volumes:
      - redis_data:/data

  postgresql:
    image: postgres:16
    container_name: api_postgresql
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      - HTUSER=${HTUSER}
      - HTPASSWD=${HTPASSWD}
    ports:
      - "80:80"
    depends_on:
      - web
    restart: always
    command: >
      sh -c "
      htpasswd -b -c /etc/nginx/.htpasswd $$HTUSER $$HTPASSWD &&
      chmod 644 /etc/nginx/.htpasswd &&
      chown root:root /etc/nginx/.htpasswd && 
      nginx -g 'daemon off;'
      "